name: Terraform

on:
  push:
    branches:
      - terraform

jobs:
  
  deploy_to_dev:
    runs-on: ubuntu-latest
    name: ðŸ›³ Deploy Terraform to Develop
    if: ${{ github.ref == 'refs/heads/terraform' }}
    environment: dev
    defaults:
      run:
        working-directory: ./terraform
    steps:
    - uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.2.9

    - name: Terraform 
      run: |
        rm -rf .terraform
        terraform init
        terraform validate
        terraform plan -var-file tfvars/$ENV.tfvars -out plan.out
        terraform apply "plan.out"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        ENV: dev  

  deploy_to_tst:
    runs-on: ubuntu-latest
    name: ðŸš€ Deploy to tst Terraform
    if: ${{ github.ref == 'refs/heads/tst' }}
    environment: tst
    defaults:
      run:
        working-directory: ./terraform
    steps:
    - uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.2.9

    - name: Terraform 
      run: |
        rm -rf .terraform
        terraform init
        terraform validate
        terraform plan -var-file tfvars/$ENV.tfvars -out plan.out
        terraform apply "plan.out"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        ENV: tst  

  deploy_to_prod:
    runs-on: ubuntu-latest
    name: ðŸš€ Deploy to Productions Terraform
    if: ${{ github.ref == 'refs/heads/master' }}
    environment: prd
    defaults:
      run:
        working-directory: ./terraform
    steps:
    - uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.2.9

    - name: Terraform 
      run: |
        rm -rf .terraform
        terraform init
        terraform validate
        terraform plan -var-file tfvars/$ENV.tfvars -out plan.out
        terraform apply "plan.out"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        ENV: prd 
